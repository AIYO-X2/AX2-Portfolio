// Note that this file is not actually medium zoom, it is generated by OpenAI Chat GPT

function zoomImage(image) {
  // Get the current dimensions of the image
  const imgWidth = image.offsetWidth;
  const imgHeight = image.offsetHeight;

  // Get the current dimensions of the viewport
  const viewWidth = window.innerWidth;
  const viewHeight = window.innerHeight;

  // Calculate the scale factor for the image
  const scaleX = viewWidth / imgWidth;
  const scaleY = viewHeight / imgHeight;
  const scale = Math.min(scaleX, scaleY);

  // Set the transform origin so that the image scales from the center
  image.style.transformOrigin = '50% 50%';

  // Scale the image
  image.style.transform = `scale(${scale})`;

  // Center the image within the viewport
  const translateX = (viewWidth - imgWidth) / 2;
  const translateY = (viewHeight - imgHeight) / 2;
  image.style.left = `${translateX}px`;
  image.style.top = `${translateY}px`;

  image.style.zIndex = 999;

  // Add the "zoomed" class to the image to apply some additional styles
  image.classList.add('zoomed');
}

function unzoomImage(image) {
  // Remove the transform and positioning styles
  image.style.transform = '';
  image.style.left = '';
  image.style.top = '';
  image.style.position = '';

  // Remove the "zoomed" class
  image.classList.remove('zoomed');
}

const images = document.querySelectorAll('img');

images.forEach(image => {
  image.addEventListener('click', () => {
    if (image.classList.contains('zoomed')) {
      unzoomImage(image);
    } else {
      // Bring the image to the front
      image.style.zIndex = 1;

      // Animate the image to the center of the viewport
      image.style.transition = 'transform 0.5s, left 0.5s, top 0.5s';
      image.style.position = 'fixed';
      zoomImage(image);
    }
  });
});

window.addEventListener('scroll', () => {
  // Unzoom any zoomed images when the user scrolls
  images.forEach(image => {
    if (image.classList.contains('zoomed')) {
      unzoomImage(image);
    }
  });
});
